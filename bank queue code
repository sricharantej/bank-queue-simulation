#include <stdio.h>
#include <string.h>

#define SIZE 5
#define NAME_LENGTH 30

char queue[SIZE][NAME_LENGTH]; 
int front = -1, rear = -1;
int isFull() {
    return rear == SIZE - 1;
}

int isEmpty() {
    return front == -1 || front > rear;
}

void enqueue(char customer[]) {
    if (isFull()) {
        printf("Queue Overflow: Cannot add more customers.\n");
        return;
    }

    if (isEmpty()) {
        front = 0;
    }

    rear++;
    strcpy(queue[rear], customer);
    printf("Customer %s added to queue.\n", customer);
}

void dequeue() {
    if (isEmpty()) {
        printf("Queue Underflow: No customers to serve.\n");
        return;
    }

    printf("Customer %s served.\n", queue[front]);
    front++;

    if (front > rear) {
        front = rear = -1;
    }
}

void displayQueue() {
    if (isEmpty()) {
        printf("No customers in queue.\n");
        return;
    }

    printf("Current Queue: ");
    for (int i = front; i <= rear; i++) {
        printf("%s", queue[i]);
        if (i < rear) printf(" -> ");
    }
    printf("\n");
}

int main() {
    int choice;
    char name[NAME_LENGTH];

    while (1) {
        printf("\n--- Bank Queue Menu ---\n");
        printf("1. Enqueue Customer\n");
        printf("2. Dequeue Customer\n");
        printf("3. Display Queue\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); 

        switch (choice) {
            case 1:
                printf("Enter customer name: ");
                fgets(name, NAME_LENGTH, stdin);
                name[strcspn(name, "\n")] = '\0'; 
                enqueue(name);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                displayQueue();
                break;
            case 4:
                printf("Exiting the simulation.\n");
                return 0;
            default:
                printf("Invalid choice. Please enter 1-4.\n");
        }
    }

    return 0;
}
